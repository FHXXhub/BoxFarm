-- Create the ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the frame with rounded corners and gradient background
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 600, 0, 350)  -- Adjusted size
Frame.Position = UDim2.new(0.5, -300, 0.5, -175)  -- Centered on the screen
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  -- Dark grey background
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui

-- Add rounded corners to the frame (top and bottom corners)
local UICornerTop = Instance.new("UICorner")
UICornerTop.CornerRadius = UDim.new(0, 30)  -- Rounded top corners with a larger radius
UICornerTop.Parent = Frame

local UICornerBottom = Instance.new("UICorner")
UICornerBottom.CornerRadius = UDim.new(0, 15)  -- Rounded bottom corners with a smaller radius
UICornerBottom.Parent = Frame

-- Create a gradient background for the frame
local UIGradient = Instance.new("UIGradient")
UIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 80, 80))
})
UIGradient.Parent = Frame

-- Create the frame title with new font style and size
local FrameTitle = Instance.new("TextLabel")
FrameTitle.Size = UDim2.new(1, 0, 0, 50)  -- Title height adjusted
FrameTitle.Position = UDim2.new(0, 0, 0, 0)
FrameTitle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)  -- Dark title background
FrameTitle.Text = "FHXX's Box AutoFarm"
FrameTitle.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
FrameTitle.Font = Enum.Font.GothamBold
FrameTitle.TextSize = 28  -- Larger font size for title
FrameTitle.TextStrokeTransparency = 0.5  -- Add some stroke for effect
FrameTitle.Parent = Frame

-- Add rounded corners to the title bar
local TitleUICorner = Instance.new("UICorner")
TitleUICorner.CornerRadius = UDim.new(0, 30)  -- Same radius as the top of the frame
TitleUICorner.Parent = FrameTitle

-- Create the button with a new style
local Button = Instance.new("TextButton")
Button.Size = UDim2.new(0, 560, 0, 60)  -- Button width adjusted
Button.Position = UDim2.new(0.5, -280, 0.5, -30)  -- Centered within the frame
Button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)  -- Gray background for the button
Button.Text = "Autofarm: OFF"
Button.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
Button.Font = Enum.Font.GothamBold
Button.TextSize = 22  -- Button font size
Button.TextStrokeTransparency = 0.4  -- Add a stroke effect to the text
Button.Parent = Frame

-- Add rounded corners to the button
local ButtonUICorner = Instance.new("UICorner")
ButtonUICorner.CornerRadius = UDim.new(0, 15)  -- Rounded corners for the button
ButtonUICorner.Parent = Button

-- Variables for drag functionality
local dragging = false
local dragInput, mousePos, framePos

-- Function to update the frame's position
local function update(input)
    local delta = input.Position - mousePos
    Frame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
end

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        mousePos = input.Position
        framePos = Frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Autofarm logic
local autofarmOn = false
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Movement positions (the waypoints you want to move through)
local positions = {
    {-552, 4, -83}, {-552, 4, -86}, {-549, 4, -83}, {-546, 4, -83}, 
    {-544, 4, -83}, {-541, 4, -83}, {-538, 4, -83}, {-536, 4, -82}, 
    {-532, 3, -81}, {-530, 3, -81}, {-528, 3, -81}, {-527, 3, -81}, 
    {-524, 3, -81}, {-521, 3, -81}, {-518, 3, -81}, {-515, 3, -80}, 
    {-513, 3, -80}, {-511, 3, -80}, {-508, 3, -79}, {-505, 3, -79}, 
    {-499, 3, -79}, {-495, 3, -78}, {-492, 3, -78}, {-487, 3, -78}, 
    {-483, 3, -77}, {-479, 3, -77}, {-474, 3, -77}, {-471, 3, -76}, 
    {-468, 3, -76}, {-463, 3, -76}, {-460, 3, -76}, {-458, 4, -76}, 
    {-455, 4, -75}, {-452, 4, -75}, {-449, 4, -75}, {-445, 4, -74}, 
    {-440, 3, -74}, {-437, 3, -74}, {-434, 3, -74}, {-430, 3, -73}, 
    {-427, 3, -73}, {-424, 3, -73}, {-421, 3, -73}, {-418, 3, -72}, 
    {-415, 3, -72}, {-413, 3, -72}, {-410, 3, -72}, {-407, 3, -72}, 
    {-404, 3, -72}, {-401, 3, -72}, 
    
}

-- Function to hold a key for a specific duration
local function holdKey(key, duration)
    local VirtualInputManager = game:GetService("VirtualInputManager")
    VirtualInputManager:SendKeyEvent(true, key, false, game)
    wait(duration)
    VirtualInputManager:SendKeyEvent(false, key, false, game)
end

-- Function to move to positions and then reverse the movement
local isRunning = false  -- Flag to track if autofarm is running

local function moveToPositions()
    while autofarmOn do  -- Keep moving indefinitely while autofarm is ON
        if not isRunning then  -- Prevent starting a new round if it's already running
            isRunning = true
            local halfway = math.floor(#positions / 2)  -- Find the midpoint of the positions
            -- Move forward through the positions
            for i, pos in ipairs(positions) do
                humanoidRootPart.CFrame = CFrame.new(unpack(pos))
                wait(0.3)  -- 0.3-second delay between moves
                
                -- Simulate holding "E" at specific checkpoints
                if (pos[1] == -552 and pos[3] == -86) or (pos[1] == -401 and pos[3] == -72) then
                    holdKey(Enum.KeyCode.E, 1)  -- Hold "E" for 1 second
                end
                
                -- Press "3" once at the middle of the lap (after reaching halfway)
                if i == halfway then
                    holdKey(Enum.KeyCode.Three, 0.1)  -- Press "3" for 0.1 seconds
                end
            end
            -- After completing a lap, move in reverse through the positions
            for i = #positions, 1, -1 do
                local pos = positions[i]
                humanoidRootPart.CFrame = CFrame.new(unpack(pos))
                wait(0.3)  -- 0.3-second delay between moves
                -- Simulate holding "E" at specific checkpoints
                if (pos[1] == -552 and pos[3] == -86) or (pos[1] == -401 and pos[3] == -72) then
                    holdKey(Enum.KeyCode.E, 1)  -- Hold "E" for 1 second
                end
            end
            isRunning = false
        end
        wait(0.3)  -- Wait a bit before starting the next round
    end
end

-- Function to toggle the autofarm
local function toggleAutofarm()
    autofarmOn = not autofarmOn
    Button.Text = autofarmOn and "Autofarm: ON" or "Autofarm: OFF"
    
    -- Change button color depending on autofarm state
    Button.BackgroundColor3 = autofarmOn and Color3.fromRGB(30, 30, 30) or Color3.fromRGB(30, 30, 30)  -- Lighter green when ON
    Button.TextColor3 = autofarmOn and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(242, 243, 243)  -- White when ON, Light grey when OFF

    if autofarmOn then
        moveToPositions()  -- Start the autofarm
    end
end

-- Connect the button click event to toggle the autofarm
Button.MouseButton1Click:Connect(toggleAutofarm)
